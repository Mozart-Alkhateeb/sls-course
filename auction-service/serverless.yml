service:
  name: auction-service

plugins:
  - serverless-pseudo-parameters
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
  iamRoleStatements:
    - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}

resources:
  Resources:
    # DynamoDB
    AuctionsTable: ${file(resources/AuctionsTable.yml):AuctionsTable}

functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auctions
  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auctions/{id}
  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: PATCH
          path: /auctions/{id}/bid

custom:
  AuctionsTable:
    # name: !Ref AuctionsTable # needs aws online
    name: AuctionsTable-${self:provider.stage}
    arn: !GetAtt AuctionsTable.Arn

  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      domain:
        sources:
          - table: ${self:provider.environment.AUCTIONS_TABLE_NAME}
            sources: [./resources/data/auctions.json]
